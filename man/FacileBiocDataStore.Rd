% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api.R, R/bioc-DESeqDataSet.R, R/bioc-DGEList.R
\docType{class}
\name{FacileBiocDataStore-class}
\alias{FacileBiocDataStore-class}
\alias{FacileBiocDataStore}
\alias{facilitate.DESeqDataSet}
\alias{facilitate.DGEList}
\title{Root virtual class that signals object as a FacileDataStore}
\usage{
\method{facilitate}{DESeqDataSet}(
  x,
  assay_type = "rnaseq",
  feature_type = "infer",
  ...,
  run_vst = NULL,
  blind = TRUE,
  nsub = 1000,
  fitType = "parametric",
  prior.count = 0.1,
  verbose = FALSE
)

\method{facilitate}{DGEList}(x, assay_type = "rnaseq", feature_type = "infer", ...)
}
\description{
Standard Bioconductor assay containers, like DGEList, DESeqDataSet,
SummarizedExperiment, etc. are immersed into the facile.bio ecosystem by
calling the \code{facilitate()} function on them.
}
\section{DESeqDataSet}{


The FacileDESeqDataSet will look for variance stabilized versions of the
data in the \code{"vst"} and \code{"rlog"} assay matrices. If no \code{"vst"} assay is
present, it will be run and stored there, unless the \verb{facilitate,run_vst}
parameter is set to \code{FALSE}.

Because DESeq uses a different normalization method than edgeR's TMM, when
the user calls \code{fetch_assay_data(.., normalized = TRUE)}, the default will
be to return the normalized count data retrieved from
\code{\link[DESeq2:counts]{DESeq2::counts()}} with \code{normalized = TRUE}.

To return \code{\link[edgeR:cpm]{edgeR::cpm()}} values, you can set \code{normalized = "cpm"}, but this
must be working over the \code{"counts"} assay.
\enumerate{
\item Add parameters to run vst/rlog?
\item Enable vst, rlog, and normcounts  to be retrieved via
fetch_assay_data(assay_name = {"vst"|"rlog"|"normcounts"})
}
}

\section{DGEList}{

We assume the DGEList holds \code{"rnaseq"} assay data. Set the \code{assay_type}
parameter if that's not the case.
}

\examples{

# DESeq2 --------------------------------------------------------------------
dds <- DESeq2::makeExampleDESeqDataSet(n=2000, m=20)
fd <- facilitate(dds)
fetch_assay_data(samples(fd), c("gene1", "gene20"))
fetch_assay_data(samples(fd), c("gene1", "gene20"), normalized = TRUE)
fetch_assay_data(samples(fd), c("gene1", "gene20"), normalized = "cpm")

samples(fd) \%>\%
  with_assay_data(c("gene1", "gene20"), normalized = TRUE)

# Retrieiving different flavors of normalized expression data
dat <- samples(fd) \%>\%
  with_assay_data("gene1", normalized = TRUE) \%>\%
  with_assay_data("gene1", normalized = "cpm") \%>\%
  with_assay_data("gene1", assay_name = "vst") \%>\%
  select(-(1:2))
colnames(dat) <- c("normcounts", "cpm", "vst")
pairs(dat)

dpca <- FacileAnalysis::fpca(fd, assay_name = "vst")
# edgeR ---------------------------------------------------------------------
y <- example_bioc_data(class = "DGEList")
yf <- facilitate(y)
fpca(yf)
}
